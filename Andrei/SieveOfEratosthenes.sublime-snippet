<snippet>
	<content><![CDATA[
namespace SieveOfEratosthenes{

	const int limita = 1e7 + 1;
	vector < int > divisors[limita];
	int firstdiv[limita];
	bitset < limita > primes;
	void precompute(int limit)
	{
		primes.set();
		int i,j;
		for(i=2;i<=limit;++i)
		{
			if(primes[i] == true)
			{
				//firstdiv[i] = i;
				divisors[i].push_back(i);
				for(j=2*i;j<=limit;j+=i)
				{
					primes[j] = false;
					//if(firstdiv[j] == 0)
					//	firstdiv[j] = i;
					//divisors[j].push_back(i);
				}
			}
		}
	}
	vector < int > get_div(int n)
	{
		return divisors[n];
	} 
	int get_first_div(int n)
	{
		return firstdiv[n];
	}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<!-- <tabTrigger>SieveOfEratosthenes</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
